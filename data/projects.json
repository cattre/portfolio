{
  "projects" : [
    {
      "name": "Tasks",
      "intro": "MVC to do app",
      "tech": [
        {
          "title": "PHP",
          "path": "assets/logos/php.png"
        },
        {
          "title": "JavaScript",
          "path": "assets/logos/js.png"
        },
        {
          "title": "MySQL",
          "path": "assets/logos/mySQL.png"
        },
        {
          "title": "HTML5",
          "path": "assets/logos/html5.png"
        },
        {
          "title": "Bootstrap",
          "path": "assets/logos/bootstrap.png"
        }
      ],
      "images": [
        {
          "image": "image1",
          "path": "assets/projectImages/tasks1.png"
        },
        {
          "image": "image2",
          "path": "assets/projectImages/tasks2.png"
        },
        {
          "image": "image3",
          "path": "assets/projectImages/tasks3.png"
        }
      ],
      "brief": "Create a to do app using MVC and the Slim framework",
      "execution": "In this personal project I started with a Slim skeleton app, connecting to a MySQL database and implementing controllers to add, edit, update and delete tasks. I then added users and login sessions to control the visibility of tasks.",
      "primaryLink": "https://tasks.richardcatterill.tech",
      "secondaryLink": "https://github.com/cattre/todo"
    },
    {
      "name": "The Real MVP",
      "intro": "OOP sports collection app",
      "tech": [
        {
          "title": "PHP",
          "path": "assets/logos/php.png"
        },
        {
          "title": "HTML5",
          "path": "assets/logos/html5.png"
        },
        {
          "title": "SCSS",
          "path": "assets/logos/sass.png"
        }
      ],
      "images": [
        {
          "image": "image1",
          "path": "assets/projectImages/sports1.png"
        },
        {
          "image": "image2",
          "path": "assets/projectImages/sports2.png"
        },
        {
          "image": "image3",
          "path": "assets/projectImages/sports3.png"
        }
      ],
      "brief": "Create a collection app using advanced PHP programming and employing best practice",
      "execution": "We used object-oriented programming in PHP. I worked as part of a pair/sub group, storing data from an API within a MySQL database, as well as filtering data within the HTML/SCSS frontend and writing associated unit tests. We learnt the benefits of following the PSR4 autoloading standards as well as SOLID principles and good design patterns.",
      "primaryLink": "https://dev.io-academy.uk/projects/2020-sept/2020-sept-sportsmvp",
      "secondaryLink": "https://github.com/Mayden-Academy/2020-sept-sportsmvp"
    },
    {
      "name": "Finance calculator",
      "intro": "Loan finance calculator for Mayden Academy",
      "tech": [
        {
          "title": "TypeScript",
          "path": "assets/logos/ts.png"
        },
        {
          "title": "HTML5",
          "path": "assets/logos/html5.png"
        },
        {
          "title": "CSS3",
          "path": "assets/logos/css3.png"
        }
      ],
      "images": [
        {
          "image": "image1",
          "path": "assets/projectImages/calc1.png"
        },
        {
          "image": "image2",
          "path": "assets/projectImages/calc2.png"
        },
        {
          "image": "image3",
          "path": "assets/projectImages/calc3.png"
        }
      ],
      "brief": "Create a finance calculator to be used on the Mayden Academy website. This should allow prospective students to calculate the time taken to repay their loan, as well as any applicable admin fees. Must be built using TypeScript and a CSS preprocessor.",
      "execution": "I had fun with this one - matching the MA branding, building in dependent fields and validation, and calculating the loan details.",
      "primaryLink": "/financeCalc",
      "secondaryLink": "https://github.com/cattre/financeCalc"
    },
    {
      "name": "Thump a Trump",
      "intro": "JavaScript 'whack-a-mole'-esque game",
      "tech": [
        {
          "title": "JavaScript",
          "path": "assets/logos/js.png"
        },
        {
          "title": "HTML5",
          "path": "assets/logos/html5.png"
        },
        {
          "title": "CSS3",
          "path": "assets/logos/css3.png"
        }
      ],
      "images": [
        {
          "image": "image1",
          "path": "assets/projectImages/trump1.png"
        },
        {
          "image": "image2",
          "path": "assets/projectImages/trump2.png"
        },
        {
          "image": "image3",
          "path": "assets/projectImages/trump3.png"
        }
      ],
      "brief": "Create a JavaScript game in the style of whack-a-mole.",
      "execution": "The first team project, we managed to over-deliver during the sprint and created a great-looking and addictive game - just in time for the 2020 US election! I worked on the timing and scoring logic, as well as some of the interactions. We used pair programming predominantly as well as a mob effort at the end to deliver a last minute bonus feature. We used GIT to collaboratively work on the same codebase.",
      "primaryLink": "https://dev.io-academy.uk/projects/2020-sept/2020-sept-thump-game/",
      "secondaryLink": "https://github.com/Mayden-Academy/2020-sept-thump-game"
    },
    {
      "name": "Beers collection",
      "intro": "PHP MySQL collection app",
      "tech": [
        {
          "title": "PHP",
          "path": "assets/logos/php.png"
        },
        {
          "title": "MySQL",
          "path": "assets/logos/mySQL.png"
        },
        {
          "title": "HTML5",
          "path": "assets/logos/html5.png"
        },
        {
          "title": "CSS3",
          "path": "assets/logos/css3.png"
        }
      ],
      "images": [
        {
          "image": "image1",
          "path": "assets/projectImages/beers1.png"
        },
        {
          "image": "image2",
          "path": "assets/projectImages/beers2.png"
        },
        {
          "image": "image3",
          "path": "assets/projectImages/beers3.png"
        }
      ],
      "brief": "Create a collection app using PHP and MySQL, enabling the display of all database items as well as the addition of new ones.",
      "execution": "The first project involving MySQL, I built the beers collection using PHP and HTML, using POST requests to capture user data. I also used sessions to retain filter selections.",
      "primaryLink": "/beers",
      "secondaryLink": "https://github.com/cattre/beers"
    },
    {
      "name": "Blackjack",
      "intro": "PHP multiplayer card game",
      "tech": [
        {
          "title": "PHP",
          "path": "assets/logos/php.png"
        },
        {
          "title": "HTML5",
          "path": "assets/logos/html5.png"
        },
        {
          "title": "CSS3",
          "path": "assets/logos/css3.png"
        }
      ],
      "images": [
        {
          "image": "image1",
          "path": "assets/projectImages/blackjack1.png"
        },
        {
          "image": "image2",
          "path": "assets/projectImages/blackjack2.png"
        },
        {
          "image": "image3",
          "path": "assets/projectImages/blackjack3.png"
        }
      ],
      "brief": "Create a basic blackjack game using PHP",
      "execution": "My first project exploring PHP, I expanded on the initial brief, adding card images, twist/stick, and multi-player features.",
      "primaryLink": "/blackjack",
      "secondaryLink": "https://github.com/cattre/blackjack"
    },
    {
      "name": "Checkmark",
      "intro": "Decision quality assurance system for the Planning Inspectorate",
      "tech": [
        {
          "title": "Power Apps",
          "path": "assets/logos/powerApps.png"
        },
        {
          "title": "SharePoint",
          "path": "assets/logos/sharePoint.png"
        },
        {
          "title": "Power Automate",
          "path": "assets/logos/powerAutomate.png"
        }
      ],
      "images": [
        {
          "image": "image1",
          "path": "assets/projectImages/CM1.png"
        },
        {
          "image": "image2",
          "path": "assets/projectImages/CM2.png"
        },
        {
          "image": "image3",
          "path": "assets/projectImages/CM3.png"
        }
      ],
      "brief": "The aim was to unify all quality assurance functions across the Planning Inspectorate, increasing the scope of data captured, reducing admin overhead and the likelihood of data errors, whilst providing users with a self-service system.",
      "execution": "I built three apps using Microsoft Power Apps, supported by 6 SharePoint lists/libraries and 19 Power Automate flows. I worked on the project for just over a year, collaborating closely with the product owner to refine the solution. At the point of handover it had saved over 500 weeks from overall case age as of the end of the pilot phase alone.",
      "primaryLink": "",
      "secondaryLink": ""
    }
  ]
}